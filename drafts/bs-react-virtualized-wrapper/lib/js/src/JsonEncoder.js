// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List        = require("bs-platform/lib/js/list.js");
var $$Array     = require("bs-platform/lib/js/array.js");
var Json_encode = require("@glennsl/bs-json/lib/js/src/Json_encode.bs.js");

function encodeStage(stage) {
  var match = stage[/* departure */4];
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "id",
                stage[/* id */0]
              ],
              /* :: */[
                /* tuple */[
                  "spellId",
                  stage[/* spellId */1]
                ],
                /* :: */[
                  /* tuple */[
                    "patientId",
                    stage[/* patientId */2]
                  ],
                  /* :: */[
                    /* tuple */[
                      "arrival",
                      Json_encode.date(stage[/* arrival */3])
                    ],
                    /* :: */[
                      /* tuple */[
                        "departure",
                        match ? Json_encode.date(match[0]) : ""
                      ],
                      /* :: */[
                        /* tuple */[
                          "ward",
                          stage[/* ward */5]
                        ],
                        /* :: */[
                          /* tuple */[
                            "specialty",
                            stage[/* specialty */6]
                          ],
                          /* :: */[
                            /* tuple */[
                              "consultant",
                              stage[/* consultant */7]
                            ],
                            /* [] */0
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function encodeJourney(journey) {
  var stagesArrayJs = $$Array.of_list(List.map(encodeStage, journey[/* stages */1]));
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "id",
                journey[/* id */0]
              ],
              /* :: */[
                /* tuple */[
                  "stages",
                  stagesArrayJs
                ],
                /* [] */0
              ]
            ]);
}

function encodePatient(patient) {
  var stagesArrayJs = $$Array.of_list(List.map(encodeJourney, patient[/* journeys */1]));
  return Json_encode.object_(/* :: */[
              /* tuple */[
                "id",
                patient[/* id */0]
              ],
              /* :: */[
                /* tuple */[
                  "journeys",
                  stagesArrayJs
                ],
                /* [] */0
              ]
            ]);
}

function encodePatients(patients) {
  return $$Array.of_list(List.rev(List.rev_map(encodePatient, patients)));
}

exports.encodeStage    = encodeStage;
exports.encodeJourney  = encodeJourney;
exports.encodePatient  = encodePatient;
exports.encodePatients = encodePatients;
/* Json_encode Not a pure module */
