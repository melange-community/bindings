let combineLatest2 = CombineLatest2Observable.create;
let concat = ConcatObservable.create;
let concatMap = ConcatMapObservable.create;
let concatMap1 = ConcatMapObservable.create1;
let concatMap2 = ConcatMapObservable.create2;
let concatMap3 = ConcatMapObservable.create3;
let concatList = ConcatListObservable.create;
let debounceTime = DebounceTimeObservable.create;
let defaultIfEmpty = DefaultIfEmptyObservable.create;
let defer = DeferObservable.create;
let defer1 = DeferObservable.create1;
let defer2 = DeferObservable.create2;
let defer3 = DeferObservable.create3;
let delay = DelayObservable.create;
let dematerialize = DematerializeObservable.create;
let distinctUntilChanged = DistinctUntilChangedObservable.create;
let empty = EmptyObservable.create;
let every = EveryObservable.create;
let exhaust = ExhaustObservable.create;
let exhaustMap = ExhaustMapObservable.create;
let exhaustMap1 = ExhaustMapObservable.create1;
let exhaustMap2 = ExhaustMapObservable.create2;
let exhaustMap3 = ExhaustMapObservable.create3;
let find = FindObservable.create;
let first = FirstObservable.create;
let firstOrNone = FirstOrNoneObservable.create;
let ignoreElements = IgnoreElementsObservable.create;
let isEmpty = IsEmptyObservable.create;
let keep = KeepObservable.create;
let keep1 = KeepObservable.create1;
let keep2 = KeepObservable.create2;
let keep3 = KeepObservable.create3;
let last = LastObservable.create;
let lastOrNone = LastOrNoneObservable.create;
let map = MapObservable.create;
let map1 = MapObservable.create1;
let map2 = MapObservable.create2;
let map3 = MapObservable.create3;
let mapTo = MapToObservable.create;
let materialize = MaterializeObservable.create;
let maybeFirst = MaybeFirstObservable.create;
let maybeLast = MaybeLastObservable.create;
let merge = MergeObservable.create;
let mergeList = MergeListObservable.create;
let mergeMap = MergeMapObservable.create;
let mergeMap1 = MergeMapObservable.create1;
let mergeMap2 = MergeMapObservable.create2;
let mergeMap3 = MergeMapObservable.create3;
let none = NoneObservable.create;
let observe = ObserveObservable.create;
let observe1 = ObserveObservable.create1;
let observe2 = ObserveObservable.create2;
let observe3 = ObserveObservable.create3;
let observeOn = ObserveOnObservable.create;
let ofList = OfListObservable.create;
let ofNotifications = OfNotificationsObservable.create;
let ofValue = OfValueObservable.create;
let onComplete = OnCompleteObservable.create;
let onComplete1 = OnCompleteObservable.create1;
let onComplete2 = OnCompleteObservable.create2;
let onComplete3 = OnCompleteObservable.create3;
let onConnect = OnConnectObservable.create;
let onConnect1 = OnConnectObservable.create1;
let onConnect2 = OnConnectObservable.create2;
let onConnect3 = OnConnectObservable.create3;
let onExn = OnExnObservable.create;
let onExn1 = OnExnObservable.create1;
let onExn2 = OnExnObservable.create2;
let onExn3 = OnExnObservable.create3;
let onNext = OnNextObservable.create;
let onNext1 = OnNextObservable.create1;
let onNext2 = OnNextObservable.create2;
let onNext3 = OnNextObservable.create3;
let publishToSubject = PublishToSubjectObservable.create;
let publishToSubscriber = PublishToSubscriberObservable.create;
let raise = RaiseObservable.create;
let repeat = RepeatObservable.create;
let retry = RetryObservable.create;
let scan = ScanObservable.create;
let share = ShareObservable.create;
let shareReplayLast = ShareReplayLast.create;
let shareReplayBuffer = ShareReplayBufferObservable.create;
let skip = SkipObservable.create;
let some = SomeObservable.create;
let startWithList = StartWithListObservable.create;
let startWithValue = StartWithValueObservable.create;
let subscribeOn = SubscribeOnObservable.create;
let switch_ = SwitchObservable.create;
let switchMap = SwitchMapObservable.create;
let switchMap1 = SwitchMapObservable.create1;
let switchMap2 = SwitchMapObservable.create2;
let switchMap3 = SwitchMapObservable.create3;
let take = TakeObservable.create;
let takeUntil = TakeUntilObservable.create;
let timeout = TimeoutObservable.create;
let using = UsingObservable.create;
let using1 = UsingObservable.create1;
let using2 = UsingObservable.create2;
let withLatestFrom = WithLatestFromObservable.create;