// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "@rescript/std/lib/es6/belt_Array.js";
import * as Belt_Option from "@rescript/std/lib/es6/belt_Option.js";
import * as Caml_option from "@rescript/std/lib/es6/caml_option.js";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.js";
import * as Suite_Vector$Benchmark from "./Suite_Vector.js";

function toString(x) {
  if (x) {
    return Suite_Vector$Benchmark.Routes.map(x._0).url;
  } else {
    return "";
  }
}

function fromString(s) {
  return Belt_Option.getWithDefault((s.split("/"), Belt_Option.map(Suite_Vector$Benchmark.Routes.fromUrl(s), (function (x) {
                      return /* VectorSuite */{
                              _0: x
                            };
                    }))), /* Index */0);
}

function name(x) {
  if (x) {
    return Suite_Vector$Benchmark.Routes.map(x._0).suite.name;
  } else {
    return "Index";
  }
}

var vectorMenu = Belt_Array.map(Suite_Vector$Benchmark.Routes.routes, (function (a) {
        return /* VectorSuite */{
                _0: a
              };
      }));

function useUrl(param) {
  return fromString(RescriptReactRouter.useUrl(undefined, undefined).hash);
}

function Router$HashLink(Props) {
  var children = Props.children;
  var to_ = Props.to_;
  var className = Props.className;
  var href = toString(to_);
  var tmp = {
    href: "#" + href
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement("a", tmp, children);
}

var HashLink = {
  make: Router$HashLink
};

export {
  toString ,
  fromString ,
  name ,
  vectorMenu ,
  useUrl ,
  HashLink ,
}
/* vectorMenu Not a pure module */
