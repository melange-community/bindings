// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("bs-jest/lib/js/src/jest.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Fit$BsSpectacle = require("../src/components/Fit.js");
var Fill$BsSpectacle = require("../src/components/Fill.js");
var Notes$BsSpectacle = require("../src/components/Notes.js");
var Appear$BsSpectacle = require("../src/components/Appear.js");
var Layout$BsSpectacle = require("../src/components/Layout.js");
var SlideSet$BsSpectacle = require("../src/components/SlideSet.js");
var TestHelpers$BsSpectacle = require("./helpers/TestHelpers.js");
var ComponentPlayground$BsSpectacle = require("../src/components/ComponentPlayground.js");

describe("Appear", (function () {
        Jest.test("without props", (function () {
                var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, Appear$BsSpectacle.make(undefined, undefined, /* array */[])));
                return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
              }));
        Jest.test("with fid", (function () {
                var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, Appear$BsSpectacle.make(undefined, "1", /* array */[])));
                return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
              }));
        return Jest.test("with order", (function () {
                      var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, Appear$BsSpectacle.make(1, undefined, /* array */[])));
                      return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
                    }));
      }));

describe("ComponentPlayground", (function () {
        Jest.test("without props", (function () {
                var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, ComponentPlayground$BsSpectacle.make(undefined, undefined, undefined, undefined, /* array */[])));
                return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
              }));
        Jest.test("with dark theme", (function () {
                var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, ComponentPlayground$BsSpectacle.make(undefined, undefined, /* Dark */1, undefined, /* array */[])));
                return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
              }));
        Jest.test("with light theme", (function () {
                var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, ComponentPlayground$BsSpectacle.make(undefined, undefined, /* Light */0, undefined, /* array */[])));
                return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
              }));
        Jest.test("with preview background color", (function () {
                var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, ComponentPlayground$BsSpectacle.make(undefined, "#7315FF", undefined, undefined, /* array */[])));
                return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
              }));
        Jest.test("with scope", (function () {
                var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, ComponentPlayground$BsSpectacle.make(undefined, undefined, undefined, {
                              logger: (function (prim) {
                                  console.log(prim);
                                  return /* () */0;
                                })
                            }, /* array */[])));
                return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
              }));
        return Jest.test("with code", (function () {
                      var component = TestHelpers$BsSpectacle.setup(ReasonReact.element(undefined, undefined, ComponentPlayground$BsSpectacle.make("test", undefined, undefined, undefined, /* array */[])));
                      return Jest.ExpectJs[/* toMatchSnapshot */16](Jest.ExpectJs[/* expect */0](component));
                    }));
      }));

var Deck = /* module */[];

var element = ReasonReact.element(undefined, undefined, Fill$BsSpectacle.make(/* array */[]));

var Fill = TestHelpers$BsSpectacle.MakeTest(/* module */[
      /* name */"Fill",
      /* element */element
    ]);

var element$1 = ReasonReact.element(undefined, undefined, Fit$BsSpectacle.make(/* array */[]));

var Fit = TestHelpers$BsSpectacle.MakeTest(/* module */[
      /* name */"Fit",
      /* element */element$1
    ]);

var element$2 = ReasonReact.element(undefined, undefined, Layout$BsSpectacle.make(/* array */[]));

var Layout = TestHelpers$BsSpectacle.MakeTest(/* module */[
      /* name */"Layout",
      /* element */element$2
    ]);

var Magic = /* module */[];

var element$3 = ReasonReact.element(undefined, undefined, Notes$BsSpectacle.make(/* array */["test"]));

var Notes = TestHelpers$BsSpectacle.MakeTest(/* module */[
      /* name */"Notes",
      /* element */element$3
    ]);

var element$4 = ReasonReact.element(undefined, undefined, SlideSet$BsSpectacle.make(/* array */[]));

var SlideSet = TestHelpers$BsSpectacle.MakeTest(/* module */[
      /* name */"SlideSet",
      /* element */element$4
    ]);

exports.Deck = Deck;
exports.Fill = Fill;
exports.Fit = Fit;
exports.Layout = Layout;
exports.Magic = Magic;
exports.Notes = Notes;
exports.SlideSet = SlideSet;
/*  Not a pure module */
