// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Spectacle = require("spectacle");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Types$BsSpectacle = require("../Types.js");
var BaseProps$BsSpectacle = require("../BaseProps.js");

function make(italic, bold, caps, margin, padding, textColor, textSize, textAlign, textFont, bgColor, bgImage, bgSize, bgPosition, bgRepeat, bgDarken, overflow, height, align, controlColor, goTo, id, maxHeight, maxWidth, notes, onActive, progressColor, transition, transitionIn, transitionOut, transitionDuration, getAppearStep, children) {
  var tmp = { };
  if (align !== undefined) {
    tmp.align = Js_primitive.valFromOption(align);
  }
  if (controlColor !== undefined) {
    tmp.controlColor = Js_primitive.valFromOption(controlColor);
  }
  if (goTo !== undefined) {
    tmp.goTo = Js_primitive.valFromOption(goTo);
  }
  if (id !== undefined) {
    tmp.id = Js_primitive.valFromOption(id);
  }
  if (maxHeight !== undefined) {
    tmp.maxHeight = Js_primitive.valFromOption(maxHeight);
  }
  if (maxWidth !== undefined) {
    tmp.maxWidth = Js_primitive.valFromOption(maxWidth);
  }
  if (notes !== undefined) {
    tmp.notes = Js_primitive.valFromOption(notes);
  }
  if (onActive !== undefined) {
    tmp.onActive = Js_primitive.valFromOption(onActive);
  }
  if (progressColor !== undefined) {
    tmp.progressColor = Js_primitive.valFromOption(progressColor);
  }
  var tmp$1 = Types$BsSpectacle.mapTransitionsToJs(transition);
  if (tmp$1 !== undefined) {
    tmp.transition = Js_primitive.valFromOption(tmp$1);
  }
  var tmp$2 = Types$BsSpectacle.mapTransitionsToJs(transitionIn);
  if (tmp$2 !== undefined) {
    tmp.transitionIn = Js_primitive.valFromOption(tmp$2);
  }
  var tmp$3 = Types$BsSpectacle.mapTransitionsToJs(transitionOut);
  if (tmp$3 !== undefined) {
    tmp.transitionOut = Js_primitive.valFromOption(tmp$3);
  }
  if (transitionDuration !== undefined) {
    tmp.transitionDuration = Js_primitive.valFromOption(transitionDuration);
  }
  if (getAppearStep !== undefined) {
    tmp.getAppearStep = Js_primitive.valFromOption(getAppearStep);
  }
  return ReasonReact.wrapJsForReason(Spectacle.Slide, BaseProps$BsSpectacle.extendProps(italic, bold, caps, margin, padding, textColor, textSize, textAlign, textFont, bgColor, bgImage, bgSize, bgPosition, bgRepeat, bgDarken, overflow, height, tmp), children);
}

exports.make = make;
/* spectacle Not a pure module */
