// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Js_option = require("bs-platform/lib/js/js_option.js");
var Spectacle = require("spectacle");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Types$BsSpectacle = require("../Types.js");

function make(controls, contentHeight, contentWidth, history, progress, theme, transition, transitionDuration, autoplay, autoplayDuration, children) {
  var tmp = { };
  if (controls !== undefined) {
    tmp.controls = Js_primitive.valFromOption(controls);
  }
  if (contentHeight !== undefined) {
    tmp.contentHeight = Js_primitive.valFromOption(contentHeight);
  }
  if (contentWidth !== undefined) {
    tmp.contentWidth = Js_primitive.valFromOption(contentWidth);
  }
  if (history !== undefined) {
    tmp.history = Js_primitive.valFromOption(history);
  }
  var tmp$1 = Js_option.map(Types$BsSpectacle.mapProgressToJs, progress);
  if (tmp$1 !== undefined) {
    tmp.progress = Js_primitive.valFromOption(tmp$1);
  }
  if (theme !== undefined) {
    tmp.theme = Js_primitive.valFromOption(theme);
  }
  var tmp$2 = Types$BsSpectacle.mapTransitionsToJs(transition);
  if (tmp$2 !== undefined) {
    tmp.transition = Js_primitive.valFromOption(tmp$2);
  }
  if (transitionDuration !== undefined) {
    tmp.transitionDuration = Js_primitive.valFromOption(transitionDuration);
  }
  if (autoplay !== undefined) {
    tmp.autoplay = Js_primitive.valFromOption(autoplay);
  }
  if (autoplayDuration !== undefined) {
    tmp.autoplayDuration = Js_primitive.valFromOption(autoplayDuration);
  }
  return ReasonReact.wrapJsForReason(Spectacle.Deck, tmp, children);
}

exports.make = make;
/* spectacle Not a pure module */
